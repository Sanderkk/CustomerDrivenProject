
pipeline {
    agent none

    environment {
        HOME = '.'
    }

    stages {
        // Build backend
        stage('Build backend') {
            agent any
            steps {
                dir('./backend/src') {
                    sh 'dotnet restore'
                    sh 'dotnet publish -c Release'
                }
            }
        }
        stage('Backend build debug') {
            agent any
            steps {
                dir('./backend') {
                    sh 'dotnet restore'
                    sh 'sudo dotnet build'
                }
            }
        }
        stage('Backend xunit tests') {
            agent any
            steps {
                dir('./backend') {
                    sh returnStdout:true, script:'sudo dotnet test --logger \"trx;LogFileName=unit_tests.trx\" --no-build'
                }
            }
        }
        // Install and build frontend
        stage('Build frontend') {
            agent {
                docker {
                    image 'node:lts'
                }
            }
            steps{
                dir('./frontend/src') {
                    sh 'node --version'
                    sh 'npm --version'
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }
        // Deploy frontend and backend
        stage('Deploy') {
            agent any
            steps {
                sh 'docker-compose up -d --build'
            }
        }
        stage('End to end tests') {
            agent {
                docker {
                    image 'selenium/node-chrome'
                }
            }
            steps{
                dir('./frontend/tests') {
                    sh 'npm install'
                    sh 'npm run test'
                }
            }
        }
    }
}